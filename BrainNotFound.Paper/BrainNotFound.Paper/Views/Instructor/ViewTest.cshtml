@using BrainNotFound.Paper.Models.BusinessModels;
@using BrainNotFound.Paper.Services;
@model Test;
@{
    Test test = ViewBag.Test;
    List<Section> sections = ViewBag.Sections;

    ViewData["Title"] = "View " + test.TestName + " - Instructor";
    int testScheduleCounter = 1;
    int option = 97;

}
<div class="row" id="TestInformationSection">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2><i class="fa fa-file-text-o"></i> @(test.Course.Department.DepartmentCode) @(test.Course.CourseCode) - @(" " + test.TestName)</h2>
                <ul class="nav navbar-right panel_toolbox">
                    <li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a></li>
                    <li class="dropdown">
                        <a class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-edit"></i></a>
                        <ul class="dropdown-menu" role="menu">
                            <li>
                                <a asp-controller="Instructor" asp-action="EditTest" asp-route-DepartmentCode="@test.Course.Department.DepartmentCode" asp-route-CourseCode="@test.Course.CourseCode" asp-route-URLSafeName="@test.URLSafeName"><i class="fa fa-pencil"></i> Edit </a>
                            </li>
                        </ul>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <!-- START: Statistics -->
                <h3>General</h3>
                <hr />
                <div class="animated flipInY col-md-4 col-sm-12 col-xs-12">
                    <div class="tile-stats">
                        <div class="icon">
                            <i class="fa fa-dot-circle-o"></i>
                        </div>
                        <div id="TotalPointsStats" class="count">@ViewBag.TotalPoints</div>
                        <h3>Total Points</h3>
                    </div>
                </div>
                <div class="animated flipInY  col-md-4 col-sm-12 col-xs-12">
                    <div class="tile-stats">
                        <div class="icon">
                            <i class="fa fa-question"></i>
                        </div>
                        <div id="TotalQuestionsStats" class="count">@ViewBag.TotalQuestions</div>
                        <h3>Questions</h3>
                    </div>
                </div>
                <div class="animated flipInY col-md-4 col-sm-12 col-xs-12">
                    <div class="tile-stats">
                        <div class="icon">
                            <i class="fa fa-sort-alpha-asc"></i>
                        </div>
                        <div id="TotalSectionsStats" class="count">@ViewBag.TestSections.Count</div>
                        <h3>Sections</h3>
                    </div>
                </div>
                <div class="clearfix"></div>

                <!-- END: Statistics -->
                <!-- START: Schedule -->
                <h3>Schedule</h3>
                <hr />

                <table id="TestAssignmentTable" class="table table-striped">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Availability</th>
                            <th>Time Limit</th>
                            <th>Students Assigned</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (TestSchedule ts in test.TestSchedules)
                        {
                            <tr>
                                <th scope="row">@testScheduleCounter</th>
                                <td>
                                    <p><i class="fa fa-calendar"></i> @ts.GetAvailability()</p>
                                </td>
                                <td>
                                    @if (ts.IsTimeUnlimited)
                                    {
                                        <p>Unlimited</p>
                                    }
                                    else
                                    {
                                        <p>@ts.TimeLimit</p>
                                    }

                                </td>
                                <td>{{Assigmnet}}</td>
                            </tr>
                        }
                        <!-- TODO: Add table Rows-->
                    </tbody>
                </table>
                <!-- END: Schedule -->
                <!-- START: New Test Schedule -->
                <!-- END: New Test Schedule -->
            </div>
        </div>
    </div>
</div>

<!-- True false section template-->
@foreach (TestSection ts in ViewBag.TestSections)
{
    <div class="x_panel">
        <div class="x_title">
            <h2><i class="fa fa-info-circle"></i> | @DefaultTestSectionText.Header.Get(ts.QuestionType)</h2>
            <ul class="nav navbar-right panel_toolbox">
                <li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a></li>
                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-edit"></i></a>
                    <ul class="dropdown-menu" role="menu">
                        <li>
                            <a asp-controller="Instructor" asp-action="EditTest" asp-route-DepartmentCode="@test.Course.Department.DepartmentCode" asp-route-CourseCode="@test.Course.CourseCode" asp-route-URLSafeName="@test.URLSafeName"><i class="fa fa-pencil"></i> Edit </a>
                        </li>
                    </ul>
                </li>
            </ul>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            <div class="row">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <p><b>Instructions:</b> @ts.SectionInstructions</p>
                </div>
            </div>
            <div class="ln_solid"></div>
            <div class="col-md-12 col-sm-12 col-xs-12">
                <p><b>Questions:</b> </p>
            </div>

            @{ switch (ts.QuestionType)
                {
                    case "TrueFalse":
                        int count = 1;
                        foreach (Question q in ts.Questions)
                        {
                            <div class="col-md-12 col-sm-12 col-xs-12 questionRow" style="padding: 20px 0 10px 0">
                                <div class="col-md-1 col-sm-1 col-xs-3 text-center">
                                    <span id="pointValue-56789">(<span class="pointValue" id="pointValue">@q.PointValue</span> pts.)</span>
                                </div>
                                <div class="col-md-9 col-sm-9 col-xs-11">
                                    <p><strong>@count.</strong> @q.Content</p>
                                </div>
                                <div class="form-group col-md-2 col-sm-2 col-xs-12">
                                    @if (((TrueFalse)q).TrueFalseAnswer == true)
                                    {
                                        <div id="gender" class="btn-group" data-toggle="buttons">
                                            <label class="btn btn-primary btn-sm " disabled data-questionType="trueFalse" data-toogled-class="btn-primary">
                                                <input class="trueFalse" type="radio" name="trueFalseAnswer-@q.QuestionId" data-questionId="@q.QuestionId" value="true"> &nbsp; True &nbsp;
                                            </label>
                                            <label class="btn btn-default btn-sm" disabled data-questionType="trueFalse" data-toogled-class="btn-danger">
                                                <input class="trueFalse" type="radio" name="trueFalseAnswer-@q.QuestionId" data-questionId="@q.QuestionId" value="false"> False
                                            </label>
                                        </div>
                                    }
                                    else
                                    {
                                        <div id="gender" class="btn-group" data-toggle="buttons">
                                            <label class="btn btn-default btn-sm" disabled data-questionType="trueFalse" data-toogled-class="btn-primary">
                                                <input class="trueFalse" type="radio" name="trueFalseAnswer-@q.QuestionId" data-questionId="@q.QuestionId" value="true"> &nbsp; True &nbsp;
                                            </label>
                                            <label class="btn btn-default btn-sm" disabled data-questionType="trueFalse" data-toogled-class="btn-danger">
                                                <input class="trueFalse" type="radio" name="trueFalseAnswer-@q.QuestionId" data-questionId="@q.QuestionId" value="false"> False
                                            </label>
                                        </div>
                                    }
                                </div>
                            </div>
                            count++;
                        }
                        break;
                    case "MultipleChoice":
                        int countMC = 1;
                        foreach (Question q in ts.Questions)
                        {
                            <div class="col-md-12 col-sm-12 col-xs-12 questionRow" style="padding: 20px 0 10px 0">
                                <div class="col-md-1 col-sm-1 col-xs-3 text-center">
                                    <span id="pointValue-56789"><span class="pointValue" id="pointValue">(@q.PointValue</span> pts.)</span>
                                </div>
                                <div class="col-md-11 col-sm-11 col-xs-11">
                                    <p><strong>@countMC.</strong> @q.Content</p>
                                </div>

                                <div class="col-md-1"></div>
                                <div class="form-group col-md-11 col-sm-11 col-xs-12">
                                    @{
                                        option = 97;
                                        foreach (MultipleChoiceAnswer mca in q.MultipleChoiceAnswers)
                                        {
                                            if (mca.IsCorrect)
                                            {
                                                <a class="btn btn-primary btn-block text-left multipleChoiceOption" disabled data-mcQuestionId="@q.QuestionId" data-mcanswerId="@mca.MultipleChoiceAnswerId" data-isSelected="true"><span class="pull-left"><strong>@Convert.ToChar(option). </strong> @mca.MultipleChoiceAnswerOption</span>&nbsp;</a>
                                            }
                                            else
                                            {
                                                <a class="btn btn-default btn-block text-left multipleChoiceOption"  disabled data-mcQuestionId="@q.QuestionId" data-mcanswerId="@mca.MultipleChoiceAnswerId" data-isSelected="true"><span class="pull-left"><strong>@Convert.ToChar(option). </strong> @mca.MultipleChoiceAnswerOption</span>&nbsp;</a>
                                            }
                                            option++;
                                        }
                                    }
                                </div>
                            </div>
                            countMC++;
                        }
                        break;
                    case "Essay":
                        int essayCount = 1;
                        foreach (Question q in ts.Questions)
                        {
                            <div class="col-md-12 col-sm-12 col-xs-12 questionRow" style="padding: 20px 0 10px 0">
                                <div class="col-md-1 col-sm-1 col-xs-3 text-center">
                                    <span id="pointValue-56789">(<span class="pointValue" id="pointValue">@q.PointValue</span> pts.)</span>
                                </div>
                                <div class="col-md-11 col-sm-11 col-xs-11">
                                    <p><strong>@essayCount.</strong> @q.Content</p>
                                </div>
                                @if (((Essay)q).ExpectedEssayAnswer != string.Empty)
                                {
                                    <div class="col-md-1 col-sm-1 col-xs-3 text-center">
                                    </div>
                                    <div class="col-md-11 col-sm-11 col-xs-12">
                                        <textarea class="studentEssayQuestionAnswer" disabled="disabled" data-essayQuestionId="@q.QuestionId">@(((Essay)q).ExpectedEssayAnswer)</textarea>
                                    </div>
                                }

                            </div>
                        }
                        break;
                    case "Matching":
                        int matchingCount = 1;
                        foreach (Question q in ts.Questions)
                        {
                            <div class="x_panel">
                                <div class="x_content">
                                    <div class="col-md-12 col-sm-12 col-xs-12 questionRow" style="padding: 20px 0 10px 0">
                                        <div class="col-md-1 col-sm-1 col-xs-3 text-center">
                                            <span id="pointValue-56789">(<span class="pointValue" id="pointValue">1</span> pts.)</span>
                                        </div>
                                        <div class="col-md-10 col-sm-11 col-xs-11">
                                            <p><strong>@matchingCount.</strong> @q.Content</p>
                                        </div>
                                        <div class="clearfix"></div>
                                        <div class="ln_solid"></div>
                                        <div class="col-md-11 col-sm-11 col-xs-12"></div>
                                        @foreach (MatchingQuestionSide mqs in q.MatchingQuestionSides)
                                        {
                                            <div class="col-md-5 col-sm-5 col-xs-12">
                                                <p>@mqs.Content</p>
                                            </div>
                                            <div class=" col-md-5 col-sm-5 col-xs-12">
                                                <select data-matchingAnswerSideId="@mqs.MatchingAnswerSideId" data-mQuestionId="@q.QuestionId" data-matchingQuestionSideId="@mqs.MatchingQuestionSideId" class="form-control MatchingAnswerOptions" required="">
                                                    @foreach (MatchingAnswerSide mas in q.MatchingAnswerSides)
                                                    {
                                                        if (mqs.MatchingAnswerSideId == mas.MatchingAnswerSideId)
                                                        {
                                                            <option value="@mas.MatchingAnswerSideId">@mas.MatchingAnswer</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                        break;
                    default:
                        break;
                }
            }
        </div>
    </div>
}